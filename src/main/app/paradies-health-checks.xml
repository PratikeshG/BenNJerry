<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ftp="http://www.mulesoft.org/schema/mule/ee/ftp" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/ftp http://www.mulesoft.org/schema/mule/ee/ftp/current/mule-ftp-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd">
    <sub-flow name="Paradies:health-check-tenders">
        <flow-ref name="GLOBAL:set-session-vars" doc:name="GLOBAL:set-session-vars"/>
        <flow-ref name="MI:OAuth:retrieveToken" doc:name="MI:OAuth:retrieveToken"/>
        <flow-ref name="Paradies:set-flow-vars" doc:name="Paradies:set-flow-vars"/>
        <flow-ref name="MI:getLocations" doc:name="MI:getLocations"/>
        <foreach counterVariableName="paradies-location-health-checks-counter" doc:name="For Each Location">
            <scripting:component doc:name="Get Payments (HealthCheckPayload)">
                <scripting:script engine="Groovy"><![CDATA[import java.util.Arrays;
import paradies.health.HealthCheckPayload;
import com.squareup.connect.SquareClient;
import com.squareup.connect.Payment;
import util.TimeManager;

SquareClient client = new SquareClient(sessionVars['token'], sessionVars['apiUrl'], sessionVars['apiVersion'], sessionVars['merchantId'], payload.id);

HealthCheckPayload hcPayload = new HealthCheckPayload();

// Location
hcPayload.setLocation(payload);

// Payments
Map<String,String> paymentParams;
int seconds = 60 * 10;
paymentParams = TimeManager.getPastTimeInterval(seconds, 0, "UTC");

Payment[] acctPayments = client.payments().list(paymentParams);
ArrayList<Payment> payments = new ArrayList<Payment>(Arrays.asList(acctPayments));

hcPayload.setPayments(payments);

return hcPayload;]]></scripting:script>
            </scripting:component>
            <component class="paradies.health.HealthCheckCallable" doc:name="Perform health check"/>
            <batch:set-record-variable variableName="storeName" value="#[payload.getLocation().getLocationDetails().getNickname()]" doc:name="storeName"/>
            <foreach collection="#[payload.getPayments()]" counterVariableName="health-check-tender-counter" doc:name="For Each">
                <set-payload value="#[message.payload.getPaymentUrl()]" doc:name="email payload"/>
                <smtp:outbound-endpoint host="smtp.gmail.com" port="587" user="${email.info.sending.email}" password="${email.info.sending.password}" connector-ref="Gmail" to="${email.info.receiving.email}" from="Square Bridge" subject="#['${mule.env}'.toUpperCase() + ' Invalid payment tender at ' + flowVars.brand + ' location: ' + flowVars.storeName]" responseTimeout="10000" doc:name="Email to Sales Eng"/>
            </foreach>
        </foreach>
    </sub-flow>
    <flow name="Pandora:health-check-tenders" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-pandora-hc-tender-1471812551" cronExpression="0 0/10 * 1/1 * ? *" repeatInterval="0" responseTimeout="10000" doc:name="Cron every 10 minutes">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <choice doc:name="isActive?">
            <when expression="#['${paradies.pandora.isActive}' == false]">
                <logger message="Pandora flows inactive. Not performing health checks." level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <set-variable variableName="deployment" value="${paradies.pandora.deploymentId}" doc:name="Pandora deployment ID"/>
                <batch:set-record-variable variableName="brand" value="Pandora" doc:name="brand: Pandora"/>
                <flow-ref name="Paradies:health-check-tenders" doc:name="Paradies:health-check-tenders"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="Brighton:health-check-tenders" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-brighton-hc-tender-1471812551" cronExpression="0 0/10 * 1/1 * ? *" repeatInterval="0" responseTimeout="10000" doc:name="Cron every 10 minutes">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <choice doc:name="isActive?">
            <when expression="#['${paradies.brighton.isActive}' == false]">
                <logger message="Brighton flows inactive. Not performing health checks." level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <set-variable variableName="deployment" value="${paradies.brighton.deploymentId}" doc:name="Brighton deployment ID"/>
                <batch:set-record-variable variableName="brand" value="Brighton" doc:name="brand: Brighton"/>
                <flow-ref name="Paradies:health-check-tenders" doc:name="Paradies:health-check-tenders"/>
            </otherwise>
        </choice>
    </flow>
    <flow name="Paradies:trigger-health-checks">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/paradies/health/jXsEyB.UFz71ZNg/{brand}" doc:name="/paradies-health-checks"/>
        <flow-ref name="#[message.inboundProperties.'http.uri.params'.brand + ':health-check-tenders']" doc:name="#[message.inboundProperties.'http.uri.params'.brand + ':health-check-tenders']"/>
        <set-payload value="Done." doc:name="Set Payload"/>
    </flow>
</mule>
