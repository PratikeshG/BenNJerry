<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <quartz:connector name="Quartz-Altra" validateConnections="true" doc:name="Quartz">
        <quartz:factory-property key="org.quartz.scheduler.instanceName" value="Quartz-Altra"/>
    </quartz:connector>
    <sftp:connector name="SFTP-VFC-Altra" validateConnections="true" doc:name="SFTP"/>
    <flow name="VFC:Altra:generate-reports-trigger">
        <http:listener config-ref="${default.http.config}" path="/${urlKey}/vfc-altra-generate-reports" doc:name="HTTPS"/>
        <logger message="Triggered VFC:Altra:generate-reports-trigger" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="writeLocal" value="#[message.inboundProperties.'http.query.params'.writeLocal != null ? message.inboundProperties.'http.query.params'.writeLocal : false]" doc:name="Set Write Local"/>
        <set-session-variable variableName="#[util.Constants.RANGE]" value="#[message.inboundProperties.'http.query.params'.range]" doc:name="Set Range"/>
        <set-session-variable variableName="#[util.Constants.OFFSET]" value="#[message.inboundProperties.'http.query.params'.offset]" doc:name="Set Offset"/>
        <choice doc:name="Date Provided?">
	       <when expression="#[message.inboundProperties.'http.query.params'.fileDate == null]">
	      		<set-session-variable variableName="fileDate" value="#[function:datestamp:MM-dd-yy]" doc:name="Set Current Datestamp"/>
	       </when>
	       <otherwise>
	       	<set-session-variable variableName="fileDate" value="#[message.inboundProperties.'http.query.params'.fileDate]" doc:name="Set Datestamp from Query Param"/>
	       </otherwise>
       	</choice>
        <flow-ref name="VFC:Altra:generate-reports" doc:name="VFC:Altra:generate-reports"/>
        <set-payload value="Triggered VFC:Altra:generate-reports-trigger flow" doc:name="Set Payload"/>
    </flow>
    <flow name="VFC:Altra:generate-reports-cron">
        <quartz:inbound-endpoint jobName="quartz-Altra-generate-xml-1509907119" cronExpression="0 30 7 * * ? *" repeatInterval="0" connector-ref="Quartz-Altra" responseTimeout="10000" doc:name="Run every day at 7:30am EST" cronTimeZone="America/New_York">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <choice doc:name="Active?">
            <when expression="#['${vfcorp.altra.active.sftp}'==false]">
                <logger message="Not starting VFC:Altra:GenerateReports" level="INFO" doc:name="Logger"/>
            </when>
            <otherwise>
                <logger message="Starting VFC:Altra:GenerateReports" level="INFO" doc:name="Logger"/>
                <set-session-variable variableName="writeLocal" value="false" doc:name="Set Write Local"/>
                <set-session-variable variableName="#[util.Constants.OFFSET]" value="${vfcorp.altra.offset}" doc:name="Set Offset"/>
                <set-session-variable variableName="#[util.Constants.RANGE]" value="${vfcorp.altra.range}" doc:name="Set Range"/>
                <set-session-variable variableName="fileDate" value="#[function:datestamp:MM-dd-yy]" doc:name="Set Date"/>
                <flow-ref name="VFC:Altra:generate-reports" doc:name="VFC:Altra:generate-reports"/>
            </otherwise>
        </choice>
    </flow>
    <sub-flow name="VFC:Altra:generate-reports">
        <set-variable variableName="deployment" value="${vfcorp.altra.deploymentId}" doc:name="Deployment ID"/>
        <flow-ref name="GLOBAL:set-session-vars" doc:name="GLOBAL:set-session-vars"/>
        <flow-ref name="MI:OAuth:retrieveToken" doc:name="MI:OAuth:retrieveToken"/>
        <set-session-variable variableName="#[util.Constants.SQUARE_PAYLOAD]" value="#[payload]" doc:name="Set Merchant Details"/>
        <component class="vfcorp.altra.GetLocationDetailsCallable" doc:name="VFC:Altra:Get-Location-Details"/>
        <flow-ref name="VFC:Altra:generate-payments-transactions-files" doc:name="VFC:Altra:generate-payments-transactions-files"/>
        <flow-ref name="VFC:Altra:generate-refunds-xml" doc:name="VFC:Altra:generate-refunds-xml"/>
        <flow-ref name="VFC:Altra:generate-refunds-csv" doc:name="VFC:Altra:generate-refunds-csv"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:generate-payments-transactions-files">
        <component class="vfcorp.altra.AggregateLocationsPreviousDayPaymentsCallable" doc:name="VFC:Altra:Get-Payments"/>
        <flow-ref name="VFC:Altra:generate-items-csv" doc:name="VFC:Altra:generate-items-csv"/>
        <flow-ref name="VFC:Altra:generate-transactions-csv" doc:name="VFC:Altra:generate-transactions-csv"/>
        <flow-ref name="VFC:Altra:generate-payments-xml" doc:name="VFC:Altra:generate-payments-xml"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:generate-items-csv">
        <component class="vfcorp.altra.TransformItemsToCsvCallable" doc:name="VFC:Altra:Transform Items to CSV"/>
        <set-variable variableName="reportName" value="#[sessionVars[util.Constants.SQUARE_PAYLOAD].merchantId]-items-#[sessionVars.fileDate].csv" doc:name="Set Filename"/>
        <flow-ref name="VFC:Altra:write-files" doc:name="VFC:Altra:write-files"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:generate-transactions-csv">
        <component class="vfcorp.altra.TransformTransactionsToCsvCallable" doc:name="VFC:Altra:TransformTransactionsToCsvCallable"/>
        <set-variable variableName="reportName" value="#[sessionVars[util.Constants.SQUARE_PAYLOAD].merchantId]-transactions-#[sessionVars.fileDate].csv" doc:name="Set Filename"/>
        <flow-ref name="VFC:Altra:write-files" doc:name="VFC:Altra:write-files"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:generate-payments-xml">
        <dw:transform-message doc:name="Transform Payment to XML">
            <dw:input-payload mimeType="application/java"/>
            <dw:set-payload resource="classpath:smartwool/dwl/payment-transform.dwl"/>
        </dw:transform-message>
        <set-variable variableName="reportName" value="#[sessionVars[util.Constants.SQUARE_PAYLOAD].merchantId]-payments-#[sessionVars.fileDate].xml" doc:name="Set Filename"/>
        <flow-ref name="VFC:Altra:write-files" doc:name="VFC:Altra:write-files"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:generate-refunds-csv">
        <component class="vfcorp.altra.TransformRefundsToCsvCallable" doc:name="VFC:Altra:TransformRefundsToCsv"/>
        <set-variable variableName="reportName" value="#[sessionVars[util.Constants.SQUARE_PAYLOAD].merchantId]-refunds-#[sessionVars.fileDate].csv" doc:name="Set Filename"/>
        <flow-ref name="VFC:Altra:write-files" doc:name="VFC:Altra:write-files"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:generate-refunds-xml">
        <component class="vfcorp.altra.AggregateLocationsPreviousDayRefundsCallable" doc:name="VFC:Altra:Get-Refunds"/>
        <dw:transform-message doc:name="Transform Refunds to XML">
           <dw:input-payload mimeType="application/java"/>
           <dw:set-payload resource="classpath:smartwool/dwl/refund-transform.dwl"/>
        </dw:transform-message>
        <set-variable variableName="reportName" value="#[sessionVars[util.Constants.SQUARE_PAYLOAD].merchantId]-refunds-#[sessionVars.fileDate].xml" doc:name="Set FIlename"/>
        <flow-ref name="VFC:Altra:write-files" doc:name="VFC:Altra:write-files"/>
    </sub-flow>
    <sub-flow name="VFC:Altra:write-files">
        <choice doc:name="Produce Local?">
            <when expression="#[sessionVars.writeLocal]">
                <file:outbound-endpoint path="output" outputPattern="#[flowVars.reportName]" connector-ref="File" responseTimeout="10000" doc:name="Write File"/>
            </when>
            <otherwise>
                <sftp:outbound-endpoint exchange-pattern="one-way" connector-ref="SFTP-VFC-Altra" outputPattern="#[flowVars.reportName]" host="${vfcorp.altra.sftp.host}" port="${vfcorp.altra.sftp.port}" path="${vfcorp.sftp.path.altra}" user="${vfcorp.altra.sftp.username}" password="${vfcorp.altra.sftp.password}" responseTimeout="10000" duplicateHandling="overwrite" doc:name="Transfer to GC SFTP"/>
            </otherwise>
        </choice>
    </sub-flow>
</mule>