<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns:schedulers="http://www.mulesoft.org/schema/mule/schedulers" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/schedulers http://www.mulesoft.org/schema/mule/schedulers/current/mule-schedulers.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd">
    <queued-asynchronous-processing-strategy name="VFC_Report_Asynch_Processing_Strategy" maxThreads="${vfcorp.queuedAsynchronousProcessingStrategy.maxThreads}" minThreads="1" doc:name="Queued Asynchronous Processing Strategy" threadWaitTimeout="${vfcorp.queuedAsynchronousProcessingStrategy.threadWaitTimeout}"></queued-asynchronous-processing-strategy>
    <vm:connector name="VFC_VM_Config" validateConnections="true" doc:name="VM"/>
    <s3:config name="Amazon_S3__Configuration" accessKey="${aws.accesskey}" secretKey="${aws.secretkey}" doc:name="Amazon S3: Configuration" connectionTimeout="1800000" maxConnections="150" socketTimeout="1800000">
        <reconnect/>
    </s3:config>
    <flow name="VFC:trigger-generate-tlogs">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/vfc/tlogs/${urlKey}/{brand}/{storeId}" doc:name="/tlogs"/>
        <flow-ref name="#['VFC:' + message.inboundProperties.'http.uri.params'.brand + ':tlog-store-' + message.inboundProperties.'http.uri.params'.storeId]" doc:name="#['VFC:' + message.inboundProperties.'http.uri.params'.brand + ':tlog-store-' + message.inboundProperties.'http.uri.params'.storeId]"/>
    </flow>
    <sub-flow name="VFC:Kipling:generate-tlog-for-location-settings">
        <set-variable variableName="deployment" value="#['vfcorp-kipling-' + flowVars.storeId]" doc:name="Set deployment: vfcorp-kipling-STORE_ID"/>
        <set-variable variableName="awsFolder" value="#['Kipling/' + flowVars.storeId + '/TLOG/' + server.dateTime.format('YYYYMMddhhmmss_')]" doc:name="AWS bucket folder"/>
        <set-variable variableName="enableCustomerLoyalty" value="${vfcorp.tlog.kipling.loyalty.enabled}" doc:name="enableCustomerLoyalty"/>
        <set-variable variableName="customerGroupNew" value="${vfcorp.tlog.kipling.loyalty.group.new}" doc:name="customerGroupNew"/>
        <set-variable variableName="customerGroupExisting" value="${vfcorp.tlog.kipling.loyalty.group.existing}" doc:name="customerGroupExisting"/>
        <set-variable variableName="customerGroupEmail" value="${vfcorp.tlog.kipling.loyalty.group.email}" doc:name="customerGroupEmail"/>
    </sub-flow>
    <sub-flow name="VFC:TNF:generate-tlog-for-location-settings">
        <set-variable variableName="deployment" value="#['vfcorp-tnf-' + flowVars.storeId]" doc:name="Set deployment: vfcorp-tnf-STORE_ID"/>
        <set-variable variableName="awsFolder" value="#['TNF/' + flowVars.storeId + '/TLOG/' + server.dateTime.format('YYYYMMddhhmmss_')]" doc:name="AWS bucket folder"/>
        <set-variable variableName="enableCustomerLoyalty" value="${vfcorp.tlog.tnf.loyalty.enabled}" doc:name="enableCustomerLoyalty"/>
        <set-variable variableName="customerGroupNew" value="${vfcorp.tlog.tnf.loyalty.group.new}" doc:name="customerGroupNew"/>
        <set-variable variableName="customerGroupExisting" value="${vfcorp.tlog.tnf.loyalty.group.existing}" doc:name="customerGroupExisting"/>
        <set-variable variableName="customerGroupEmail" value="${vfcorp.tlog.tnf.loyalty.group.email}" doc:name="customerGroupEmail"/>
    </sub-flow>
    <sub-flow name="VFC:generate-tlog-for-location">
        <logger message="Initiating TLOG generation for deployment #[flowVars.deployment]" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="deploymentId" value="#[flowVars.deployment]" doc:name="deploymentId (VM safe)"/>
        <db:select config-ref="MySQL_Configuration" doc:name="Query preferredCustomerCounters">
            <db:parameterized-query><![CDATA[SELECT * FROM vfcorp_preferred_customer_counter WHERE deployment = #[flowVars.deployment] AND storeId = #[flowVars.storeId];]]></db:parameterized-query>
        </db:select>
        <set-session-variable variableName="preferredCustomerCounters" value="#[message.payload]" doc:name="preferredCustomerCounters"/>
        <flow-ref name="MI:OAuth:retrieveToken" doc:name="MI:OAuth:retrieveToken"/>
        <component doc:name="Generate TLOGs">
            <prototype-object class="vfcorp.TLOGGenerator">
            	<property key="itemNumberLookupLength" value="${vfcorp.itemNumberLookupLength}"/>
                <property key="apiUrl" value="${api.url}"/>     
            </prototype-object>
        </component>
    </sub-flow>
    <sub-flow name="VFC:generate-tlog-for-location-finish">
        <s3:create-object config-ref="Amazon_S3__Configuration" bucketName="${aws.bucket}" key="#[flowVars.awsFolder + '${vfcorp.tlog.namePrefix}' + flowVars.vfcorpStoreNumber + '${vfcorp.tlog.nameSuffix}']" doc:name="Copy to Amazon S3"/>
        <choice doc:name="Update PCM">
            <when expression="#[flowVars.preferredCustomerSQLUpdate == true]">
                <logger message="#[flowVars.storeId + &quot;: Updating MySQL for customers transactions&quot;]" level="INFO" doc:name="Logger"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Update preferredCustomerCounters">
                    <db:dynamic-query><![CDATA[#[flowVars.preferredCustomerSQLStatement]]]></db:dynamic-query>
                </db:insert>
            </when>
            <otherwise>
                <logger message="#[flowVars.storeId + &quot;: No new customers added to transactions. MySQL update not required.&quot;]" level="INFO" doc:name="Logger"/>
            </otherwise>
        </choice>
        <logger message="#['Finished generating TLOG for VF Corporation, location ' + flowVars.vfcorpStoreNumber + ' (' + flowVars.deployment + ')']" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <flow name="VFC:Kipling:tlog-store-5019" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="vfcGenerateTLOGsForLocationsCronKipling-store5019-1470289528" cronExpression="0 30 4 * * ? *" repeatInterval="0" responseTimeout="10000" doc:name="Run every day at 4:30am UTC (8:30pm PST)">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-variable variableName="storeId" value="05019" doc:name="storeId: 05019"/>
        <set-variable variableName="timeZone" value="America/New_York" doc:name="Set timeZone: America/New_York"/>
        <set-variable variableName="range" value="1" doc:name="Set range: 1"/>
        <set-variable variableName="offset" value="0" doc:name="Set offset: 0"/>
        <flow-ref name="VFC:Kipling:generate-tlog-for-location-settings" doc:name="VFC:Kipling:generate-tlog-for-location-settings"/>
        <flow-ref name="VFC:generate-tlog-for-location" doc:name="VFC:generate-tlog-for-location"/>
        <sftp:outbound-endpoint exchange-pattern="one-way" connector-ref="VFCorpSFTP" outputPattern="#['${vfcorp.tlog.namePrefix}' + flowVars.vfcorpStoreNumber + '${vfcorp.tlog.nameSuffix}']" host="${vfcorp.sftp.host}" port="${vfcorp.sftp.port}" path="${vfcorp.sftp.path.kipling}${vfcorp.sftp.path.kipling.tlog.store05019}" user="${vfcorp.sftp.username}" password="${vfcorp.sftp.password}" responseTimeout="10000" duplicateHandling="overwrite" doc:name="SFTP">
            <reconnect-forever/>
        </sftp:outbound-endpoint>
        <flow-ref name="VFC:generate-tlog-for-location-finish" doc:name="VFC:generate-tlog-for-location-finish"/>
    </flow>
</mule>
