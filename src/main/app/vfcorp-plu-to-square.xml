<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">
    <vm:connector name="VFC_VM_PLU_ITEMSDB" validateConnections="true" doc:name="VM"/>
    <queued-asynchronous-processing-strategy name="VFC_PLU_ItemsDb_Async_Processing_Strategy" maxThreads="${vfcorp.plu.itemsDb.maxThreads}" minThreads="1" doc:name="Queued Asynchronous Processing Strategy" poolExhaustedAction="WAIT" threadWaitTimeout="43200000"/>
    <sub-flow name="VFC:plu-database-to-square-for-brand">
        <logger message="Initiating PLU Database to Square update for VFC brand: #[sessionVars.brand]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Set brand-specific variables">
            <when expression="#[sessionVars.brand.equals(&quot;nautica&quot;)]">
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.nautica.itemNumberLookupLength}" doc:name="Nautica itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.nautica.ignoresSkuCheckDigit}" doc:name="Nautica ignoresSkuCheckDigit"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;kipling&quot;)]">
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.kipling.itemNumberLookupLength}" doc:name="Kipling itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.kipling.ignoresSkuCheckDigit}" doc:name="Kipling ignoresSkuCheckDigit"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;vfo&quot;)]">
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.vfo.itemNumberLookupLength}" doc:name="VFO itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.vfo.ignoresSkuCheckDigit}" doc:name="VFO ignoresSkuCheckDigit"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;tnfca&quot;)]">
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.tnfca.itemNumberLookupLength}" doc:name="TNFCA itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.tnfca.ignoresSkuCheckDigit}" doc:name="TNFCA ignoresSkuCheckDigit"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;vans&quot;)]">
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.vans.itemNumberLookupLength}" doc:name="Vans itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.vans.ignoresSkuCheckDigit}" doc:name="Vans ignoresSkuCheckDigit"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;test&quot;)]">
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.test.itemNumberLookupLength}" doc:name="Test itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.test.ignoresSkuCheckDigit}" doc:name="Test ignoresSkuCheckDigit"/>
            </when>
            <otherwise>
                <set-variable variableName="itemNumberLookupLength" value="${vfcorp.tnf.itemNumberLookupLength}" doc:name="TNF itemNumberLookupLength"/>
                <set-variable variableName="ignoresSkuCheckDigit" value="${vfcorp.tnf.ignoresSkuCheckDigit}" doc:name="TNF ignoresSkuCheckDigit"/>
            </otherwise>
        </choice>
        <component doc:name="Database to Square Catalog Update">
            <prototype-object class="vfcorp.PluDatabaseToSquareCallable"/>
        </component>
        <set-payload value="Completed Database to Square updates for VFC brand: #[sessionVars.brand] - #[sessionVars.deploymentId]" doc:name="Set Payload"/>
        <smtp:outbound-endpoint host="${email.info.sending.server}"  user="${email.info.sending.username}" password="${email.info.sending.password}" connector-ref="SES_SMTP_STARTTLS" to="bhartard@squareup.com" from="${email.info.sending.from.bridge}" subject="#['${mule.env}'.toUpperCase() + ' - COMPLETED Catalog updates - ' + sessionVars.brand]" responseTimeout="10000" doc:name="Email to Sales Eng"/>
    </sub-flow>
    <flow name="VFC:trigger-plu-database-to-square-for-brand">
        <http:listener config-ref="${default.http.config}" path="/vfc/plu/square/${urlKey}/{brand}/{deployment}" doc:name="/vfc/plu/square/KEY/BRAND/DEPLOYMENT"/>
        <set-session-variable variableName="brand" value="#[message.inboundProperties.'http.uri.params'.brand]" doc:name="Set brand"/>
        <set-session-variable variableName="deploymentId" value="#[message.inboundProperties.'http.uri.params'.deployment]" doc:name="Set deploymentId"/>
        <logger message="HTTP Trigger: PLU Database to Square: #[sessionVars.brand]" level="INFO" doc:name="Logger"/>
        <async doc:name="Async">
            <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
        </async>
        <set-payload value="Running PLU Database to Square for VFC brand: #[sessionVars.brand]" doc:name="Set Payload"/>
    </flow>
    <flow name="VFC:TNF:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-tnf-PLU-daily-1531330430" cronExpression="0 30 4 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-plu" responseTimeout="10000" doc:name="Run every day at 4:30am EST" cronTimeZone="America/New_York">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for TNF" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="tnf" doc:name="Set brand: tnf"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-tnf-00001" doc:name="Set deployment: vfcorp-tnf-00001"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:TNF-CA:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-tnfca-PLU-daily-1571074282" cronExpression="0 0 4 * * ? *" cronTimeZone="America/New_York" repeatInterval="0" connector-ref="Quartz-VFC-plu" responseTimeout="10000" doc:name="Run every day at 4:00am EST">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for TNF Canada" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="tnfca" doc:name="Set brand: tnfca"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-tnfca-01212" doc:name="Set deployment: vfcorp-tnfca-01212"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:Vans1:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-vans1-PLU-daily-1571074450" cronExpression="0 50 4 * * ? *" cronTimeZone="America/New_York" repeatInterval="0" connector-ref="Quartz-VFC-plu" responseTimeout="10000" doc:name="Run every day at 4:50am EST">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for Vans" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="vans" doc:name="Set brand: vans"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-vans-00003" doc:name="Set deployment: vfcorp-vans-00003"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:Vans2:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-vans2-PLU-daily-1571074430" cronExpression="0 30 4 * * ? *" cronTimeZone="America/New_York" repeatInterval="0" connector-ref="Quartz-VFC-plu" responseTimeout="10000" doc:name="Run every day at 4:30am EST">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for Vans" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="vans" doc:name="Set brand: vans"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-vans-00018" doc:name="Set deployment: vfcorp-vans-00018"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:Test:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-test-PLU-daily-1571074888" cronExpression="0 30 3 * * ? *" cronTimeZone="America/New_York" repeatInterval="0" connector-ref="Quartz-VFC-plu" responseTimeout="10000" doc:name="Run every day at 3:30am EST">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for Test (Vans)" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="test" doc:name="Set brand: test"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-test-00999" doc:name="Set deployment: vfcorp-test-00999"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:Kipling:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-kipling-PLU-daily-1509908120" cronExpression="0 0 4 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-plu" responseTimeout="10000" doc:name="Run every day at 4:00am EST" cronTimeZone="America/New_York">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for Kipling" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="kipling" doc:name="Set brand: kipling"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-kipling-05019" doc:name="Set deployment: vfcorp-kipling-05019"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:Nautica:plu-trigger-database-to-square" processingStrategy="synchronous">
        <logger message="CRON: PLU Database to Square for Nautica" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="nautica" doc:name="Set brand: nautica"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-nautica-00088" doc:name="Set deployment: vfcorp-nautica-00088"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:VFO:plu-trigger-database-to-square" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-vfo-PLU-daily-1509908999" cronExpression="0 0 4 * * ? *" cronTimeZone="America/New_York" repeatInterval="0" connector-ref="Quartz-VFO-plu" responseTimeout="10000" doc:name="Run every day at 4:00am EST">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <logger message="CRON: PLU Database to Square for VF Outlet" level="INFO" doc:name="Logger"/>
        <set-session-variable variableName="brand" value="vfo" doc:name="Set brand: vfo"/>
        <set-session-variable variableName="deploymentId" value="vfcorp-vfo-00999" doc:name="Set deployment: vfcorp-vfo-00999"/>
        <flow-ref name="VFC:plu-database-to-square-for-brand" doc:name="VFC:plu-database-to-square-for-brand"/>
    </flow>
    <flow name="VFC:TNF:plu-trigger-database-items">
        <http:listener config-ref="${default.http.config}" path="/vfc/items/${urlKey}" doc:name="/vfc/items"/>
        <set-session-variable variableName="brand" value="#[message.inboundProperties.'http.query.params'.brand]" doc:name="Set brand to session"/>
        <set-session-variable variableName="deploymentId" value="#[message.inboundProperties.'http.query.params'.deploymentId]" doc:name="Set deploymentId to session"/>
        <logger message="TRIGGER: PLU ITEMS Database for BRAND: #[sessionVars.brand]" level="INFO" doc:name="Logger"/>
        <component doc:name="Get all deployment locations for processing">
            <prototype-object class="vfcorp.ItemsDbLocationsCallable"/>
        </component>
        <request-reply doc:name="Request-Reply">
            <vm:outbound-endpoint exchange-pattern="one-way" path="VFC-process-itemsdb-queue-async-worker" connector-ref="VFC_VM_PLU_ITEMSDB" doc:name="VFC-process-itemsdb-queue-async-worker">
                <collection-splitter doc:name="Collection Splitter" enableCorrelation="ALWAYS"/>
            </vm:outbound-endpoint>
            <vm:inbound-endpoint exchange-pattern="one-way" path="VFC-process-itemsdb-queue-async-reply" connector-ref="VFC_VM_PLU_ITEMSDB" doc:name="VFC-process-itemsdb-queue-async-reply">
                <collection-aggregator failOnTimeout="true" doc:name="Collection Aggregator"/>
            </vm:inbound-endpoint>
        </request-reply>
        <set-payload value="Locations processed: #[payload.size()]" doc:name="Set Payload"/>
        <logger message="COMPLETED PLU ITEMS Database for BRAND: #[sessionVars.brand]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="VFC-process-itemsdb-queue-async-worker" processingStrategy="VFC_PLU_ItemsDb_Async_Processing_Strategy">
        <vm:inbound-endpoint exchange-pattern="one-way" path="VFC-process-itemsdb-queue-async-worker" connector-ref="VFC_VM_PLU_ITEMSDB" doc:name="VFC-process-itemsdb-queue-async-worker"/>
        <component doc:name="Gather async item updates from database">
            <prototype-object class="vfcorp.ItemsDbProcessingCallable"/>
        </component>
    </flow>
</mule>
