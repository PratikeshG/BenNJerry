<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd">
    <http:request-config name="PROXY_Config_http" doc:name="HTTP Request Configuration" responseTimeout="60000" usePersistentConnections="false"/>
    <http:request-config name="PROXY_Config_https" protocol="HTTPS" doc:name="HTTP Request Configuration" responseTimeout="60000" usePersistentConnections="false">
        <tls:context>
            <tls:trust-store insecure="true"/>
        </tls:context>
    </http:request-config>
    
    <flow name="sapb1-api-proxy">
		<http:listener config-ref="${sap.http.config}" path="/sap/proxy" doc:name="HTTPS"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties['X-Proxy-Authorization'] != '${sap.proxy.token}']">
                <set-payload value="{&quot;type&quot;: &quot;service.not_authorized&quot;, &quot;message&quot;: &quot;Not Authorized&quot;}" doc:name="Not Authorized" mimeType="application/json"/>
                <set-property propertyName="http.status" value="401" doc:name="401"/>
            </when>
            <otherwise>
                <set-variable variableName="inboundProxyUrl" value="#[new URL(message.inboundProperties['X-Proxy-Url']);]" doc:name="X-Proxy-Url"/>
		        <set-variable variableName="protocol" value="#[inboundProxyUrl.getProtocol();]" doc:name="protocol: http or https"/>
		        <set-variable variableName="host" value="#[inboundProxyUrl.getHost();]" doc:name="host"/>
		        <set-variable variableName="port" value="#[inboundProxyUrl.getPort() != -1 ? inboundProxyUrl.getPort() : (flowVars.protocol == 'http' ? '80' : '443')]" doc:name="port: provided or default to http (80) or https (443)"/>
		        <set-variable variableName="path" value="#[inboundProxyUrl.getPath();]" doc:name="path"/>
                <set-variable variableName="params" value="#[flowVars.inboundProxyUrl.getQuery() != null ? &quot;?&quot; + flowVars.inboundProxyUrl.getQuery() : &quot;&quot;]" doc:name="parameters"/>
		        <flow-ref name="sapb1-api-proxy-request-headers" doc:name="Copy headers"/>
                <choice doc:name="Choice">
                    <when expression="#[flowVars.protocol == 'http']">
                        <http:request config-ref="PROXY_Config_http" path="#[flowVars.path + flowVars.params]" method="#[message.inboundProperties['http.method']]" host="#[flowVars.host]" port="#[flowVars.port]" responseTimeout="60000" doc:name="Proxy Request HTTP">
                            <http:success-status-code-validator values="200..599"/>
                        </http:request>
                    </when>
                    <otherwise>
                    <http:request config-ref="PROXY_Config_https" path="#[flowVars.path + flowVars.params]" method="#[message.inboundProperties['http.method']]" host="#[flowVars.host]" port="#[flowVars.port]" responseTimeout="60000" doc:name="Proxy Request HTTPS">
                            <http:success-status-code-validator values="200..599"/>
                        </http:request></otherwise>
                </choice>
                <copy-properties propertyName="*" doc:name="Copy headers"/>
            </otherwise>
        </choice>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <choice doc:name="Choice">
                <when expression="#[exception.message != null &amp;&amp; exception.message.contains(&quot;Error sending HTTP request.&quot;)]">
                    <set-payload value="#['{&quot;proxy_error&quot;: &quot;Error establishing connectivity to your instance. If you ARE using a router, please (1) check that the IP address defined in Bridge is equal to the external IP address of your router, and the port defined in Bridge is accessible to the Square IP addresses defined in the setup guide (2) check that the router uses port forwarding to the internal IP address of your server running Square Monitor, (3) check that port forwarded on the router matches the Square Monitor port in the square-config.ini file, and (4) check that NSSM has successfully started Square Monitor. If you are NOT using a router, please (1) make sure that the IP address in Bridge matches the external IP of your server and the port is accessible to the Square IP addresses defined in the setup guide, (2) the port matches the Square Monitor port square-config.ini file and (3) check that NSSM has successfully started Square Monitor&quot;}']" doc:name="Set Payload to Unable to Connect Message"/>
                </when>
                <otherwise>
                    <set-payload value="#['{&quot;proxy_error&quot;: &quot;' + exception.message + '&quot;}']" mimeType="application/json" doc:name="Set Payload to Exception Message"/>
                </otherwise>
            </choice>
            <set-property propertyName="http.status" value="500" doc:name="Message HTTP status"/>
        </catch-exception-strategy>
	</flow>

	<sub-flow name="sapb1-api-proxy-request-headers">
		<copy-properties doc:name="Copy HTTP headers" propertyName="*"/>
        <remove-property propertyName="x-proxy-*" doc:name="Remove proxy headers"/>
		<remove-property doc:name="Remove host property" propertyName="Host"/>
		<remove-property doc:name="Remove Content Length Header" propertyName="Content-Length"/>
		<remove-property doc:name="Remove HTTP synthetic properties" propertyName="http.*"/>
		<remove-property doc:name="Remove MULE properties" propertyName="MULE_*"/>
		<remove-property doc:name="Remove Connection Header" propertyName="Connection"/>
		<remove-property doc:name="Remove Transfer-encoding Header" propertyName="transfer-encoding"/>
	</sub-flow>
</mule>
