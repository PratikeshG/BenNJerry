<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz" xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:sftp="http://www.mulesoft.org/schema/mule/sftp" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/sftp http://www.mulesoft.org/schema/mule/sftp/current/mule-sftp.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/smtps http://www.mulesoft.org/schema/mule/smtps/current/mule-smtps.xsd">
    <quartz:connector name="Quartz-VFC-employees" validateConnections="true" doc:name="Quartz">
        <quartz:factory-property key="org.quartz.scheduler.instanceName" value="Quartz-VFC-employees"/>
    </quartz:connector>
    <sub-flow name="VFC:employees-to-db-for-brand">
        <logger message="Initiating EMPLOYEES to Database update for VFC brand: #[sessionVars.brand]" level="INFO" doc:name="Logger"/>
        <choice doc:name="Set brand-specific variables">
            <when expression="#[sessionVars.brand.equals(&quot;nautica&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.nautica.minEmployees}" doc:name="Nautica minEmployees"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;kipling&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.kipling.minEmployees}" doc:name="Kipling minEmployees"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;vfo&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.vfo.minEmployees}" doc:name="VFO minEmployees"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;tnfca&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.tnfca.minEmployees}" doc:name="TNFCA minEmployees"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;vans&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.vans.minEmployees}" doc:name="Vans minEmployees"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;test&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.test.minEmployees}" doc:name="Test minEmployees"/>
            </when>
            <when expression="#[sessionVars.brand.equals(&quot;eb&quot;)]">
                <set-variable variableName="minEmployees" value="${vfcorp.eb.minEmployees}" doc:name="EB minEmployees"/>
            </when>
            <otherwise>
                <set-variable variableName="minEmployees" value="${vfcorp.tnf.minEmployees}" doc:name="TNF minEmployees"/>
            </otherwise>
        </choice>
        <component doc:name="Sync EMPLOYEES To Database">
            <prototype-object class="vfcorp.EmployeesToDatabaseCallable"/>
        </component>
        <logger message="Completed EMPLOYEES to Database update for VFC brand: #[sessionVars.brand]" level="INFO" doc:name="Complete - logger"/>
    </sub-flow>
    <flow name="VFC:trigger-employees-to-db-for-brand">
        <http:listener config-ref="${default.http.config}" path="/vfc/employees/${urlKey}/{brand}" doc:name="/vfc/employees/KEY/BRAND"/>
        <set-session-variable variableName="brand" value="#[message.inboundProperties.'http.uri.params'.brand]" doc:name="Set brand"/>
        <logger message="HTTP Trigger: EMPLOYEES to Database: #[sessionVars.brand]" level="INFO" doc:name="Logger"/>
        <async doc:name="Async">
            <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
        </async>
        <set-payload value="Running EMPLOYEES to Database VFC brand: #[sessionVars.brand]" doc:name="Set Payload"/>
    </flow>
    <flow name="VFC:Vans-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-vans-1490636323" cronExpression="0 15 0/2 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 2 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="vans" doc:name="Set brand: vans"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
    <flow name="VFC:TNF-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-tnf-1490636323" cronExpression="0 15 0/3 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 4 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="tnf" doc:name="Set brand: tnf"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
    <flow name="VFC:TNFCA-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-tnfca-1490636323" cronExpression="0 15 0/8 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 8 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="tnfca" doc:name="Set brand: tnfca"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
    <flow name="VFC:Kipling-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-kipling-1490636323" cronExpression="0 15 3/12 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 12 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="kipling" doc:name="Set brand: kipling"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
    <flow name="VFC:Nautica-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-nautica-1490636323" cronExpression="0 15 3/12 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 12 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="nautica" doc:name="Set brand: nautica"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
    <flow name="VFC:Test-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-test-1490636323" cronExpression="0 35 3/12 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 12 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="test" doc:name="Set brand: test"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
    <flow name="VFC:EB-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-eb-1490636323" cronExpression="0 35 3/4 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 4 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="eb" doc:name="Set brand: eb"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
        <flow name="VFC:VFO-sync-employees" processingStrategy="synchronous">
        <quartz:inbound-endpoint jobName="quartz-vfc-employee-vfo-1490636323" cronExpression="0 35 3/12 * * ? *" repeatInterval="0" connector-ref="Quartz-VFC-employees" responseTimeout="10000" doc:name="Run every 12 hours">
            <quartz:event-generator-job/>
        </quartz:inbound-endpoint>
        <set-session-variable variableName="brand" value="vfo" doc:name="Set brand: vfo"/>
        <flow-ref name="VFC:employees-to-db-for-brand" doc:name="VFC:employees-to-db-for-brand"/>
    </flow>
</mule>
